---
- hosts: all
  become: yes
  tasks:
  - name: Installing Dependencies
    apt:
      name:
        - build-essential
        - gdb
        - libc6-dbg
        - libreadline-dev
        - docker.io
        - python3-pip
        - clang
        - libseccomp-dev
        - ninja-build
        - cmake
        - libmpc-dev
        - texinfo
        - binutils-dev
        - bison

      state: latest
      update_cache: true


  - name: Cloning sysfilter
    git:
      repo: https://gitlab.com/Egalito/sysfilter
      dest: /home/vagrant/sysfilter
      clone: yes
      update: yes

  - name: Cloning Chestnut
    git:
      repo: https://github.com/IAIK/Chestnut
      dest: /home/vagrant/chestnut
      clone: yes
      update: yes

  - name: Cloning Temporal-Specialization
    git:
      repo: https://github.com/shamedgh/temporal-specialization
      dest: /home/vagrant/temporal-specialization
      clone: yes
      update: yes

  - name: Cloning Fuzzypol
    git:
      repo: https://gitlab.com/iot-aalen/fuzzypol.git
      dest: /home/vagrant/fuzzypol/fuzzypol
      clone: yes
      update: yes

  - name: Installing Python Dependencies for Fuzzypol
    shell:
      cmd: pip install numpy py
      chdir: /home/vagrant/fuzzypol/fuzzypol/fuzzypol

  - name: Change Ownership to Vagrant
    shell:
      cmd: chown -R vagrant sysfilter; chown -R vagrant chestnut; chown -R vagrant temporal-specialization
      chdir: /home/vagrant/

  - name: Building Sysfilter Tool
    shell:
      cmd:  make -j$(nproc)
      chdir: /home/vagrant/sysfilter/extraction


  - name: Running a Test on Sysfilter
    shell:
      cmd:   printf '%s\n' '#include <stdio.h>' 'int main(void) {' 'return 0;' '}' > test.c ; gcc -g test.c -o test.o ;  app/sysfilter_extract -v -o test.json test.o
      chdir: /home/vagrant/sysfilter/extraction

  - name: Copy Sysfilter to /usr/bin/
    shell:
      cmd:   cp sysfilter_extract /usr/bin/
      chdir: /home/vagrant/sysfilter/extraction/app

  - name: Copy Analyze Binary Script
    ansible.builtin.copy:
      src: /vagrant/provisioning/analyze_binary.sh
      dest: /home/vagrant/temporal-specialization/
      mode: '0755'
      remote_src: yes
      
  - name: Copy syscall.out parse script
    ansible.builtin.copy:
      src: /vagrant/provisioning/parse-out-temporal-specialization.py
      dest: /home/vagrant/temporal-specialization/
      mode: '0755'
      remote_src: yes 

  - name: Copy app.to.properties.json change script
    ansible.builtin.copy:
      src: /vagrant/provisioning/change_appToProperties.py
      dest: /home/vagrant/temporal-specialization/
      mode: '0755'
      remote_src: yes

  - name: Copy copy_results script
    ansible.builtin.copy:
      src: /vagrant/provisioning/copy_results.sh
      dest: /home/vagrant/temporal-specialization/
      mode: '0755'
      remote_src: yes          
      

  - name: Load Submodules
    shell:
      cmd:  git submodule update --init --recursive
      chdir: /home/vagrant/temporal-specialization

  - name: Cloning Binutils
    shell:
      cmd:  git clone --depth 1 git://sourceware.org/git/binutils-gdb.git binutils
      chdir: /home/vagrant/temporal-specialization

  - name: Building Binutils
    shell:
      cmd:  mkdir build; cd build; ../binutils/configure --enable-gold --enable-plugins --disable-werror; make all-gold
      chdir: /home/vagrant/temporal-specialization/


  - name: Extracting LLVM-7
    shell:
      cmd:  tar -Jxvf llvm-7.0.0.src.wclang.tar.xz
      chdir: /home/vagrant/temporal-specialization/

  - name: Configuring LLVM-7
    shell:
      cmd:  mkdir build; cd build; cmake -G "Unix Makefiles" -DLLVM_BINUTILS_INCDIR=/path/to/binutils/include -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install ../
      chdir: /home/vagrant/temporal-specialization/llvm-7.0.0.src

  - name: Building LLVM-7
    shell:
      cmd:  make -j$(nproc) && make install
      chdir: /home/vagrant/temporal-specialization/llvm-7.0.0.src/build
      
      
  - name: Building SVF
    shell:
      cmd:  LLVM_DIR=/home/vagrant/temporal-specialization/llvm-7.0.0.src/build/bin PATH=$LLVM_DIR/:$PATH ./build.sh && cd Release-build/
      chdir: /home/vagrant/temporal-specialization/SVF
      
  - name: Download und unarchive vanilla SVF 1.7
    ansible.builtin.unarchive:
      src: https://github.com/SVF-tools/SVF/archive/refs/tags/SVF-1.7.tar.gz
      dest: /home/vagrant/temporal-specialization/
      remote_src: yes

  - name: Building SVF-1.7
    shell:
      cmd:  LLVM_DIR=/home/vagrant/temporal-specialization/llvm-7.0.0.src/build PATH=$LLVM_DIR/:$PATH ./build.sh && cd Release-build/
      chdir: /home/vagrant/temporal-specialization/SVF-SVF-1.7
      

  # - name: Binalyzer Install Pip requirements
    # shell:
      # cmd:  pip3 install -r requirements.txt
      # chdir: /home/vagrant/chestnut/Binalyzer

  # - name: Building Dynalyzer
    # shell:
      # cmd:  make -j$(nproc)
      # chdir: /home/vagrant/chestnut/Dynalyzer

  # - name: Copy Fix for Build Script
    # ansible.builtin.copy:
      # src: /vagrant/provisioning/download-and-build-fix.sh
      # dest: /home/vagrant/chestnut/Sourcealyzer/
      # mode: '0755'
      # remote_src: yes

  # - name: Building Sourcealyzer
    # shell:
    
      # cmd: |
       # echo -e "\033[0;31mThis may take 2 hours, progress cannot be shown by ansible...\033[0m"
       # echo -e "\033[0;31mAlternative: You can interrupt ansible and run it manually. \033[0m"
       # ./download-and-build-fix.sh
      # chdir: /home/vagrant/chestnut/Sourcealyzer/