---
- hosts: all
  become: yes
  tasks:
  - name: Installing Dependencies
    apt:
      name:
        - build-essential
        - gdb
        - libc6-dbg
        - libreadline-dev
        - docker.io
        - python3-pip
        - clang
        - libseccomp-dev
        - ninja-build
        - cmake
        - libmpc-dev
        - texinfo
        - binutils-dev

      state: latest
      update_cache: true


  - name: Cloning sysfilter
    git:
      repo: https://gitlab.com/Egalito/sysfilter
      dest: /home/vagrant/sysfilter
      clone: yes
      update: yes

  - name: Cloning Chestnut
    git:
      repo: https://github.com/IAIK/Chestnut
      dest: /home/vagrant/chestnut
      clone: yes
      update: yes

  - name: Cloning Temporal-Specialization
    git:
      repo: https://github.com/shamedgh/temporal-specialization
      dest: /home/vagrant/temporal-specialization
      clone: yes
      update: yes

  - name: Cloning Fuzzypol
    git:
      repo: https://gitlab.com/iot-aalen/fuzzypol.git
      dest: /home/vagrant/fuzzypol/fuzzypol
      clone: yes
      update: yes

  - name: Installing Python Dependencies for Fuzzypol
    shell:
      cmd: pip install numpy py
      chdir: /home/vagrant/fuzzypol/fuzzypol/fuzzypol

  - name: Change Ownership to Vagrant
    shell:
      cmd: chown -R vagrant sysfilter; chown -R vagrant chestnut; chown -R vagrant temporal-specialization
      chdir: /home/vagrant/

  - name: Building Sysfilter Tool
    shell:
      cmd:  make -j$(nproc)
      chdir: /home/vagrant/sysfilter/extraction


  - name: Running a Test on Sysfilter
    shell:
      cmd:   printf '%s\n' '#include <stdio.h>' 'int main(void) {' 'return 0;' '}' > test.c ; gcc -g test.c -o test.o ;  app/sysfilter_extract -v -o test.json test.o
      chdir: /home/vagrant/sysfilter/extraction

  - name: Copy Sysfilter to /usr/bin/
    shell:
      cmd:   cp sysfilter_extract /usr/bin/
      chdir: /home/vagrant/sysfilter/extraction/app

  - name: Creating Result dir for Temporal-Specialization
    file:
      path: /home/vagrant/temporal-specialization/results
      state: directory

  - name: Copy Run Command Script
    ansible.builtin.copy:
      src: /vagrant/provisioning/run_command.sh
      dest: /home/vagrant/temporal-specialization/
      mode: '0755'
      remote_src: yes

  - name: Load Submodules
    shell:
      cmd:  git submodule update --init --recursive
      chdir: /home/vagrant/temporal-specialization

  - name: Cloning Binutils
    shell:
      cmd:  git clone --depth 1 git://sourceware.org/git/binutils-gdb.git binutils
      chdir: /home/vagrant/temporal-specialization

  - name: Building Binutils
    shell:
      cmd:  mkdir build; cd build; ../binutils/configure --enable-gold --enable-plugins --disable-werror; make all-gold
      chdir: /home/vagrant/temporal-specialization/


  - name: Extracting LLVM-7
    shell:
      cmd:  tar -Jxvf llvm-7.0.0.src.wclang.tar.xz
      chdir: /home/vagrant/temporal-specialization/

  - name: Configuring LLVM-7
    shell:
      cmd:  mkdir build; cd build; cmake -G "Unix Makefiles" -DLLVM_BINUTILS_INCDIR=/path/to/binutils/include -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install ../
      chdir: /home/vagrant/temporal-specialization/llvm-7.0.0.src

  - name: Configuring LLVM-7
    shell:
      cmd:  make -j$(nproc) && make install
      chdir: /home/vagrant/temporal-specialization/llvm-7.0.0.src/build

  - name: Building SVF
    shell:
      cmd:  LLVM_DIR=/home/vagrant/temporal-specialization/llvm-7.0.0.src/build PATH=$LLVM_DIR/:$PATH ./build.sh && cd Release-build/
      chdir: /home/vagrant/temporal-specialization/SVF

  - name: Configuring Call-graph extraction
    shell:
      cmd:  export SVF_HOME=/home/vagrant/temporal-specialization/SVF/; export PATH=$SVF_HOME/Release-build/bin:$PATH
      chdir: /home/vagrant/temporal-specialization/

  # - name: Extract Call-graph from httpd example
    # shell:
      # cmd: |
        # wpa -print-fp -ander -dump-callgraph /home/vagrant/temporal-specialization/bitcodes/httpd.apr.bc
        # python3 convertSvfCfgToHumanReadable.py callgraph_final.dot > /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.type.cfg
        # spa -condition-cfg /home/vagrant/temporal-specialization/bitcodes/httpd.apr.bc 2>&1 | tee /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.conditional.direct.calls.cfg
        # spa -simple /home/vagrant/temporal-specialization/bitcodes/httpd.apr.bc 2>&1 | tee /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.function.pointer.allocations.wglobal.cfg
      # chdir: /home/vagrant/temporal-specialization/


  # - name: Call Function Pointer Target Pruning
    # shell:
      # cmd:  python3 /home/vagrant/temporal-specialization/python-utils/graphCleaner.py --fpanalysis --funcname main --output /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.new.type.fp.wglobal.cfg --directgraphfile /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.conditional.direct.calls.cfg --funcpointerfile /home/vagrant/temporal-specialization/callgraphs/httpd.apr.svf.function.pointer.allocations.wglobal.cfg -c /home/vagrant/temporal-specializationcallgraphs/httpd.apr.svf.type.cfg
      # chdir: /home/vagrant/temporal-specialization/


  # - name: Create Syscall Stats
    # shell:
      # cmd: |
        # mkdir -p outputs; mkdir -p stats
        # python3 /home/vagrant/temporal-specialization/createSyscallStats.py -c /home/vagrant/temporal-specialization/callgraphs/glibc.callgraph --apptopropertymap /home/vagrant/temporal-specialization/app.to.properties.json --binpath /home/vagrant/temporal-specialization/binaries --outputpath /home/vagrant/temporal-specialization/outputs/ --apptolibmap /home/vagrant/temporal-specialization/app.to.lib.map.json --sensitivesyscalls /home/vagrant/temporal-specialization/sensitive.syscalls --sensitivestatspath /home/vagrant/temporal-specialization/stats/sensitive.stats --syscallreductionpath /home/vagrant/temporal-specialization/stats/syscallreduction.stats --libdebloating --othercfgpath /home/vagrant/temporal-specialization/otherCfgs/ --cfgpath /home/vagrant/temporal-specialization/callgraphs
      # chdir: /home/vagrant/temporal-specialization


  - name: Binalyzer Install Pip requirements
    shell:
      cmd:  pip3 install -r requirements.txt
      chdir: /home/vagrant/chestnut/Binalyzer

  - name: Building Dynalyzer
    shell:
      cmd:  make -j$(nproc)
      chdir: /home/vagrant/chestnut/Dynalyzer

  - name: Copy Fix for Build Script
    ansible.builtin.copy:
      src: /vagrant/provisioning/download-and-build-fix.sh
      dest: /home/vagrant/chestnut/Sourcealyzer/
      mode: '0755'
      remote_src: yes

  - name: Building Sourcealyzer
    shell:
      cmd:  ./download-and-build-fix.sh
      chdir: /home/vagrant/chestnut/Sourcealyzer/